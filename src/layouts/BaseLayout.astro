---
import SEO from '../components/SEO.astro';
import Navbar from '../components/Navbar.astro';
import Footer from '../components/Footer.astro';
import BackToTop from '../components/BackToTop.astro';
import '../styles/global.css';
import '../styles/debug-colors.css';

export interface Props {
  title?: string;
  description?: string;
  ogImage?: string;
  canonical?: string;
  noindex?: boolean;
}

const {
  title = 'موقع الأسئلة والأجوبة',
  description = 'موقع متخصص في الأسئلة والأجوبة باللغة العربية، يقدم إجابات شاملة ومفيدة للمطورين والمهتمين بالتقنية.',
  ogImage,
  canonical,
  noindex = false,
} = Astro.props;
---

<!doctype html>
<html lang="ar" dir="rtl">
  <head>
    <SEO 
      title={title}
      description={description}
      ogImage={ogImage}
      canonical={canonical}
      noindex={noindex}
    />
    
    <!-- Performance optimizations -->
    <link rel="preconnect" href="https://fonts.googleapis.com" crossorigin>
    <link rel="dns-prefetch" href="https://fonts.gstatic.com">
    
    <!-- Critical resource hints -->
    <link rel="preload" href="/favicon.svg" as="image" type="image/svg+xml">
    
    <!-- Optimize font loading -->
    <link rel="preload" href="https://fonts.googleapis.com/css2?family=Noto+Sans+Arabic:wght@400;500;600;700&display=swap" as="style" onload="this.onload=null;this.rel='stylesheet'">
    <noscript><link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Noto+Sans+Arabic:wght@400;500;600;700&display=swap"></noscript>
    <!-- Theme initialization script - runs before page render -->
    <script>
      // Prevent flash of unstyled content by applying theme class early
      (function() {
        const theme = (() => {
          try {
            const stored = localStorage.getItem('qa-site-theme');
            if (stored && ['light', 'dark', 'system'].includes(stored)) {
              return stored;
            }
          } catch (error) {
            console.warn('Failed to parse stored theme:', error);
          }
          return 'system';
        })();

        const root = document.documentElement;
        
        // Apply theme mode
        const effectiveMode = theme === 'system' 
          ? (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light')
          : theme;
        
        root.classList.add(effectiveMode);
      })();
    </script>
  </head>
  <body class="min-h-screen bg-zinc-50 text-zinc-900 dark:bg-zinc-950 dark:text-zinc-50">
    <!-- Skip to main content for screen readers -->
    <a href="#main-content" class="skip-to-main">تخطي إلى المحتوى الرئيسي</a>
    
    <div class="flex flex-col min-h-screen">
      <Navbar />
      
      <main id="main-content" class="flex-1" tabindex="-1">
        <div class="max-w-3xl mx-auto px-3 sm:px-4 md:px-6 py-4 sm:py-6 md:py-8">
          <slot />
        </div>
      </main>
      
      <Footer />
    </div>
    
    <!-- Back to Top Button -->
    <BackToTop />
    
    <!-- Image Loading Optimization Script -->
    <script>
      // Optimize image loading performance
      function optimizeImageLoading() {
        // Add loaded class to images when they finish loading
        const images = document.querySelectorAll('img[loading="lazy"]') as NodeListOf<HTMLImageElement>;
        images.forEach(img => {
          if (img.complete) {
            img.style.opacity = '1';
            img.classList.add('loaded');
          } else {
            img.addEventListener('load', function(this: HTMLImageElement) {
              this.style.opacity = '1';
              this.classList.add('loaded');
            });
            img.addEventListener('error', function(this: HTMLImageElement) {
              this.style.opacity = '1';
              this.classList.add('error');
            });
          }
        });
      }

      // Initialize on DOM content loaded
      if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', optimizeImageLoading);
      } else {
        optimizeImageLoading();
      }
    </script>
  </body>
</html>