---
import { formatDate } from '../lib/utils';

export interface Props {
  href: string;
  title: string;
  description: string;
  date: Date;
  tags: string[];
  difficulty?: 'easy' | 'medium' | 'hard';
}

const { href, title, description, date, tags, difficulty = 'easy' } = Astro.props;

const difficultyColors = {
  easy: 'bg-emerald-100 text-emerald-800 dark:bg-emerald-900/30 dark:text-emerald-300',
  medium: 'bg-amber-100 text-amber-800 dark:bg-amber-900/30 dark:text-amber-300',
  hard: 'bg-red-100 text-red-800 dark:bg-red-900/30 dark:text-red-300'
};

const difficultyLabels = {
  easy: 'سهل',
  medium: 'متوسط',
  hard: 'صعب'
};
---

<article class="group relative bg-white dark:bg-zinc-900 rounded-lg border border-indigo-300 dark:border-indigo-600 md:border-zinc-200 md:dark:border-zinc-800 p-6 shadow-xl shadow-indigo-500/20 md:shadow-lg md:shadow-indigo-500/10 -translate-y-1 md:translate-y-0 md:hover:shadow-xl md:hover:shadow-indigo-500/20 md:hover:-translate-y-2 transition-all duration-200 md:hover:border-indigo-300 md:dark:hover:border-indigo-600 focus-within:ring-2 focus-within:ring-indigo-500 focus-within:ring-offset-2 dark:focus-within:ring-indigo-400 dark:focus-within:ring-offset-zinc-950" style="will-change: transform, box-shadow;">
  <a 
    href={href} 
    class="absolute inset-0 z-10 focus-visible:outline-none" 
    aria-label={`اقرأ السؤال الكامل: ${title}`}
  >
    <span class="sr-only">اقرأ السؤال الكامل: {title}</span>
  </a>
  
  <div class="flex flex-col h-full">
    <!-- Header with difficulty badge -->
    <div class="flex items-start justify-between mb-3">
      <span class={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${difficultyColors[difficulty]}`}>
        {difficultyLabels[difficulty]}
      </span>
      <time 
        datetime={date.toISOString()} 
        class="text-sm text-zinc-500 dark:text-zinc-400 flex-shrink-0 mr-3"
      >
        {formatDate(date)}
      </time>
    </div>

    <!-- Title -->
    <h3 class="text-lg font-semibold text-indigo-600 dark:text-indigo-400 md:text-zinc-950 md:dark:text-zinc-50 mb-2 md:group-hover:text-indigo-600 md:dark:group-hover:text-indigo-400 transition-colors line-clamp-2">
      {title}
    </h3>

    <!-- Description -->
    <p class="text-zinc-600 dark:text-zinc-300 text-sm mb-4 flex-grow line-clamp-3">
      {description}
    </p>

    <!-- Tags -->
    {tags.length > 0 && (
      <div class="flex flex-wrap gap-2 mt-auto">
        {tags.slice(0, 4).map((tag) => (
          <span class="inline-flex items-center px-2 py-1 rounded-md text-xs font-medium bg-indigo-100 dark:bg-indigo-900/30 md:bg-zinc-100 md:text-zinc-700 md:dark:bg-zinc-800 md:dark:text-zinc-300 text-indigo-700 dark:text-indigo-300 md:group-hover:bg-indigo-100 md:dark:group-hover:bg-indigo-900/30 transition-all duration-200 scale-105 md:scale-100 md:group-hover:scale-105">
            #{tag}
          </span>
        ))}
        {tags.length > 4 && (
          <span class="inline-flex items-center px-2 py-1 rounded-md text-xs font-medium text-zinc-500 dark:text-zinc-400">
            +{tags.length - 4}
          </span>
        )}
      </div>
    )}
  </div>
</article>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>